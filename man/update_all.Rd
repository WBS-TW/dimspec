% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/db_comm.R
\name{update_all}
\alias{update_all}
\title{Convenience function to rebuild all database related files}
\usage{
update_all()
}
\arguments{
\item{rebuild}{LGL scalar indicating whether to first rebuild from
environment settings (default: FALSE for safety)}

\item{api_running}{LGL scalar of whether or not the API service is currently
running (default: TRUE)}

\item{api_monitor}{process object pointing to the API service (default: NULL)}

\item{db}{CHR scalar of the database name (default: session value DB_NAME)}

\item{build_from}{CHR scalar of a SQL build script to use (default:
environment value DB_BUILD_FILE)}

\item{populate}{LGL scalar of whether to populate with data from the file in
`populate_with` (default: TRUE)}

\item{populate_with}{CHR scalar for the populate script (e.g.
"populate_demo.sql") to during after the build is complete; (default:
session value DB_DATA); ignored if `populate = FALSE`}

\item{archive}{LGL scalar of whether to create an archive of the current
database (if it exists) matching the name supplied in argument `db`
(default: FALSE), passed to [`remove_db()`]}

\item{sqlite_cli}{CHR scalar to use to look for installed sqlite3 CLI tools
in the current system environment (default: session value SQLITE_CLI)}

\item{connect}{LGL scalar of whether or not to connect to the rebuilt
database in the global environment as object `con`` (default: FALSE)}

\item{log_ns}{CHR scalar of the logging namespace to use during execution
(default: "db")}
}
\value{
Files for the new database, fallback build, and data dictionary will
  be created in the project directory and objects will be created in the
  global environment for the database map (LIST "db_map") and current
  dictionary (LIST "db_dict")
}
\description{
This is a development and deployment function that should be used with
caution. It is intended solely to assist with the development process of
rebuilding a database schema from source files and producing the supporting
data. It will create both the JSON expressin of the data dictionary and the
fallback SQL file.
}
\details{
!! To preserve data, do not call this with both `rebuild` = TRUE and
`archive` = FALSE !!
}
\note{
This does not recast the views and triggers files created through
  [sqlite_autoview] and [sqlite_autotrigger] as the output of those may often
  need additional customization. Existing auto-views and -triggers will be
  created as defined. To exclude those, first modify the build file
  referenced by [build_db].

This requires references to be in place to the individual functions in
  the current environment.
}
