% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/auto_sqlite_scripts.R
\name{get_fkpk_relationships}
\alias{get_fkpk_relationships}
\title{Extract foreign key relationships from a schema}
\usage{
get_fkpk_relationships(er_map(db_conn = con))
}
\arguments{
\item{db_map}{LIST object containing descriptions of table mapping in an
opinionated manner, generally generated by [er_map]. The expectation is a
list of tables, with references in SQL form enumerated in a child element
with a name matching `references_in`}

\item{references_in}{CHR scalar naming the child element containing SQL
references statements of the form "fk_column REFERENCES table(pk_column)"
(default: "references" is provided by [er_map])}

\item{dictionary}{LIST object containing the schema dictionary produced by
[data_dictionary] fully describing table entities}
}
\value{
LIST of data frames with one element for each table with a foreign
  key defined
}
\description{
This convenience function is part of the automatic generation of SQL commands
building views and triggers from a defined schema. Its sole purpose is as a
pre-pass extraction of foreign key relationships between tables from an
object created by [db_map], which in turn relies on specific formatting in
the schema SQL definitions.
}
\note{
This only functions for list objects formatted correctly. That is, each
  entry in [db_map] must contain an element with a name matching that
  provided to `references_in` which contains a character vector formatted as
  "table1 REFERENCES table2(pk_column)".
}
