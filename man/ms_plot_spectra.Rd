% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tidy_spectra.R
\name{ms_plot_spectra}
\alias{ms_plot_spectra}
\title{Plot a fragment map from database mass spectral data}
\usage{
ms_plot_spectra(
  data,
  spectra_type = c("separated", "zipped"),
  spectra_mz_resolution = 3,
  spectra_drop_ratio = 0.01,
  spectra_repel_labels = TRUE,
  spectra_repel_line_color = "grey50",
  spectra_nudge_y_factor = 0.03,
  spectra_log_y = FALSE,
  spectra_is_file = FALSE,
  spectra_from_JSON = FALSE,
  spectra_animate = FALSE,
  spectra_text_size = 3,
  spectra_max_overlaps = 50,
  include_method = TRUE,
  db_conn = con
)
}
\arguments{
\item{data}{data.frame of spectral data in the form of the `ms_data` table}

\item{spectra_mz_resolution}{INT scalar mass to charge ratio tolerance to
group peaks, with at minimum columns for intensity (as base_int), ion m/z
value (as base_ion), and scan time (as scantime) - (default: 3)}

\item{spectra_drop_ratio}{NUM scalar threshold of the maximum intensity below
which traces will be dropped (default: 1e-2 means any trace with a maximum
intensity less than 1% of the maximum intensity in the plot will be
dropped); if > 1 the inversion will be used (1e5 -> 1e-5)}

\item{spectra_repel_labels}{LGL scalar on whether to use the [ggrepel]
package to space out m/z labels in the plot (default: TRUE). If [ggrepel]
is not installed, it will default to FALSE rather than requiring an
installation}

\item{spectra_repel_line_color}{CHR scalar name of the color to use for the
"color" aesthetic of the lines connecting repelled labels to their data
points; passed to [ggrepel::geom_text_repel] as segment.color (only a
single color is supported; default: "grey50")}

\item{spectra_nudge_y_factor}{NUM scalar y-axis offset as a fraction of the
maximum intensity for trace annotation (default: 0.03 offsets labels in the
positive direction by 3% of the maximum intensity)}

\item{spectra_log_y}{LGL scalar of whether or not to apply a log10 scaling
factor to the y-axis (default: FALSE)}

\item{spectra_is_file}{LGL scalar of whether data are coming from a file
(default: FALSE)}

\item{spectra_from_JSON}{LGL scalar of whether data are in JSON format; other
formats are not supported when `spectra_is_file = TRUE` (default: FALSE)}

\item{spectra_animate}{LGL scalar of whether to produce an animation across
the scantime for these data (default: FALSE)}

\item{spectra_text_size}{NUM scalar of the text size to use for annotation
labels (default: 3)}

\item{spectra_max_overlaps}{INT scalar of the maximum number of text overlaps
to allow (default: 50)}

\item{db_conn}{database connection (default: con) which must be live to pull
sample and compound identification information}
}
\value{
ggplot object
}
\description{
Especially for non-targeted analysis workflows, it is often necessary to
examine annotated fragment data for spectra across a given peak of interest.
Annotated fragments lend increasing confidence in the identification of the
compound giving rise to a mass spectral peak. If a fragment has been
annotated, that identification is displayed along with the mass to charge
value in blue. Annotations of the mass to charge ratio for unannotated
fragments are displayed in red.
}
\note{
If `spectra_animate` is set to true, it requires the [gganimate]
  package to be installed (and may also require the [gifski] package) and
  WILL take a large amount of time to complete, but results in an animation
  that will iterate through the scan period and display mass spectral data as
  they appear across the peak. Your mileage likely will vary.
}
