% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/NIST_import_routines.R
\name{verify_import_columns}
\alias{verify_import_columns}
\title{Verify column names for import}
\usage{
verify_import_columns(
  values,
  db_table,
  names_only = FALSE,
  require_all = TRUE,
  db_conn = con,
  log_ns = "db"
)
}
\arguments{
\item{values}{LIST or CHR vector of values to add. If `names_only` is TRUE,
values are directly interpreted as column names. Otherwise, all values
provided must be named.}

\item{db_table}{CHR scalar of the table name}

\item{names_only}{LGL scalar of whether to treat entries of `values` as the
column names rather than the column values (default: FALSE)}

\item{require_all}{LGL scalar of whether to require all columns (except the
assumed primary key column of "id") or only those defined as "NOT NULL"
(default: TRUE requires the presence of all columns in the table)}

\item{db_conn}{connection object (default: con)}

\item{log_ns}{CHR scalar of the logging namespace to use (default: "db")}
}
\value{
An object of the same type as `values` with extraneous values (i.e.
  those not matching a database column header) stripped away.
}
\description{
This function validates that all required columns are present prior to
importing into a database column by examining provided values against the
database schema. This is more of a sanity check on other functions than
anything, but also strips extraneous columns to meet the needs of an INSERT
action. The input to `values` should be either a LIST or named CHR vector of
values for insertion or a CHR vector of the column names.
}
\note{
If columns are defined as required in the schema and are not present,
  this will fail with an informative message about which columns were
  missing.

If columns are provided that do not match the schema, they will be
  stripped away in the return value.
}
