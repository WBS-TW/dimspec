% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/api_control.R
\name{api_endpoint}
\alias{api_endpoint}
\title{Build an API endpoint programmatically}
\usage{
api_endpoint(
  path,
  ...,
  server_addr = PLUMBER_URL,
  check_valid = TRUE,
  execute = TRUE,
  open_in_browser = FALSE,
  raw_result = FALSE,
  max_pings = 20L,
  return_type = c("text", "raw", "parsed"),
  return_format = c("vector", "data.frame", "list")
)
}
\arguments{
\item{path}{CHR scalar of the endpoint path.}

\item{...}{Additional named parameters added to the endpoint, most typically
the query portion. If only one is provided, it can remain unnamed and a
query is assumed. If more than one is provided, all must be named. Named
elements must be components of the return from [httr::parse_url] (see
https://tools.ietf.org/html/rfc3986) for details of the parsing algorithm;
unrecognized elements will be ignored.}

\item{server_addr}{CHR scalar uniform resource locator (URL) address of an
API server (e.g. "https://myapi.com:8080") (defaults to the current
environment variable "PLUMBER_URL")}

\item{check_valid}{LGL scalar on whether or not to first check that an
endpoint returns a valid status code (200-299) (default: TRUE).}

\item{execute}{LGL scalar of whether or not to execute the constructed
endpoint and return the result; will be defaulted to FALSE if `check_valid`
== TRUE and the endpoint returns anything other than a valid status code.
(default: TRUE)}

\item{open_in_browser}{LGL scalar of whether or not to open the resulting
endpoint in the system's default browser; will be defaulted to FALSE if
`check_valid` == TRUE and the endpoint returns anything other than a valid
status code. (default: FALSE)}

\item{max_pings}{INT scalar maximum number of pings to try before timeout if
using endpoint "_ping"; this is only used for endpoint "_ping" (default:
20)}

\item{return_type}{CHR scalar on which return type to use, which must be one
of "text", "raw", or "parsed" which will be used to read the content of the
response item (default: "text")}

\item{return_format}{CHR scalar on which form to return data, which must be
one of "vector", "data.frame", or "list" (default: "vector" to support
primarily single value responses)}
}
\value{
CHR scalar of the constructed endpoint, with messages regarding
  status checks, return from the endpoint (typically JSON) if valid and
  `execute` == TRUE, or NONE if `open_in_browser` == TRUE
}
\description{
This is a convenience function intended to support plumber endpoints. It only
assists in the construction (and execution if `execute` == TRUE) of
endpoints. Endpoints must still be understood. Validity checking, execution,
and opening in a web browser are supported. Invalid endpoints will not be
executed or opened for viewing.
}
\note{
Special support is provided for the way in which the NIST Public Data
  Repository treats URL fragments

This only support [httr::GET] requests.
}
\examples{
api_endpoint("https://www.google.com/search", list(q = "something"), open_in_browser = TRUE)
api_endpoint("https://www.google.com/search", query = list(q = "NIST Public Data Repository"), open_in_browser = TRUE)
}
