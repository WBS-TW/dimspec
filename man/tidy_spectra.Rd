% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tidy_spectra.R
\name{tidy_spectra}
\alias{tidy_spectra}
\title{Decompress Spectra}
\usage{
tidy_spectra(
  target,
  is_file = FALSE,
  is_format = c("separated", "zipped"),
  spectra_set = "msdata",
  ms_col_sep = c("measured_mz", "measured_intensity"),
  ms_col_zip = "data",
  is_JSON = FALSE
)
}
\arguments{
\item{target}{CHR scalar file path to use OR an R object containing
compressed spectral data in the "separate" or "zipped" format}

\item{is_file}{BOOL scalar of whether or not `target` is a file. Set to FALSE
to use an existing R object, which should contain an object with a named
element matching parameter `spectra_set` (default TRUE)}

\item{is_format}{CHR scalar of the compression format, which must be one of
the supported compression forms ("separated" or "zipped"); ignored if the
compression format can be inferred from the text in `target` (default
"separate")}

\item{spectra_set}{CHR scalar of the object name holding a spectra data frame
to decompress (default "msdata")}

\item{ms_col_sep}{CHR vector of the column names holding spectral masses and
intensities in the "separate" format (default c("masses", "intensities"))}

\item{ms_col_zip}{CHR scalar of the name of the column holding spectral
masses and intensities in the "unzip" format (default "msdata")}

\item{is_JSON}{BOOL scalar of whether or not `target` is a JSON expression
needing conversion (default TRUE)}
}
\value{
data.frame object containing unpacked spectra
}
\description{
This convenience wrapper will automatically decompress ms spectra in the
"separate" and "zipped" formats and return them as tidy data frames suitable
for further manipulation or visualization.
}
\examples{
tidy_spectra('{"msdata": "712.9501 15094.41015625 713.1851 34809.9765625"}', is_format = "zipped")
tidy_spectra('{"measured_mz":"712.9501 713.1851","measured_intensity":"15094.41015625 34809.9765625"}')
}
