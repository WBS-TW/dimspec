% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/db_comm.R
\name{pragma_table_info}
\alias{pragma_table_info}
\title{Explore properties of an SQLite table}
\usage{
pragma_table_info("compounds")
}
\arguments{
\item{db_table}{CHR vector name of the table(s) to inspect}

\item{db_conn}{connection object (default: con)}

\item{condition}{CHR vector matching specific checks, must be one of
c("required", "has_default", "is_PK") for constraints where a field must
not be null, has a default value defined, and is a primary key field,
respectively. (default: NULL)}

\item{name_like}{CHR vector of character patterns to match against column
names via grep. If length > 1, will be collapsed to a basic OR regex (e.g.
c("a", "b") becomes "a|b"). As regex, abbreviations and wildcards will
typically work, but care should be used in that case. (default: NULL)}

\item{data_type}{CHR vector of character patterns to match against column
data types via grep. If length > 1 will be collapsed to a basic "OR" regex
(e.g. c("int", "real") becomes "int|real"). As regex, abbreviations and
wildcards will typically work, but care should be used in that case.
(default: NULL)}

\item{include_comments}{LGL scalar of whether to include comments in the
return data frame (default: FALSE)}

\item{names_only}{LGL scalar of whether to include names meeting defined
criteria as a vector return value  (default: FALSE)}
}
\value{
data.frame object describing the database entity
}
\description{
Add functionality to `pragma_table_def` by filtering on column properties
such as required and primary key fields. This provides some flexibility to
searching table properties without sacrificing the full details of table
schema. Parameter `get_sql` is forced to FALSE; only information available
via PRAGMA is searched by this function.
}
\details{
This is intended to support validation during database communications with an
SQLite connection, especially for application (e.g. `shiny` development) by
allowing for programmatic inspection of datbase columns by name and property.
}
