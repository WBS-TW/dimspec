% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/NIST_import_routines.R
\name{resolve_ms_spectra}
\alias{resolve_ms_spectra}
\title{Unpack mass spectral data in compressed format}
\usage{
resolve_ms_spectra(
  peak_id,
  spectra_data = NULL,
  peaks_table = "peaks",
  ms_data_table = "ms_data",
  ms_spectra_table = "ms_spectra",
  unpack_format = c("separated", "zipped"),
  as_object = FALSE,
  db_conn = con,
  log_ns = "db"
)
}
\arguments{
\item{peak_id}{INT scalar of the peak ID in question, which must be present}

\item{spectra_data}{data.frame object containing spectral data}

\item{peaks_table}{CHR scalar name of the peaks table in the database
(default: "peaks")}

\item{ms_data_table}{CHR scalar name of the table holding packed spectra in
the database (default: "ms_data")}

\item{ms_spectra_table}{CHR scalar name of the table holding long form
spectra in the database (default: "ms_spectra")}

\item{unpack_format}{CHR scalar of the type of data packing for the spectra,
one of "separated" (default) or "zipped"}

\item{as_object}{LGL scalar of whether to return the unpacked spectra to the
session (default: TRUE) or to insert into the database (FALSE)}

\item{db_conn}{database connection object (default: con)}

\item{log_ns}{CHR scalar name of the logging namespace to use}
}
\value{
If `as_object` == TRUE, a data.frame of unpacked spectra, otherwise
  no return and a database insertion will be performed
}
\description{
For some spectra, searching in a long form is much more performant. Use this
function to unpack data already present in the `ms_data` table into the
`ms_spectra` table. Data should be packed in one of two ways, either two
columns for mass-to-charge ratio and intensity ("separated" - see
[ms_spectra_separated]) or in a single column with interleaved data ("zipped"
- see [ms_spectra_zipped]).
}
\note{
This function may be slow, especially with peaks containing a large
  number of scans or a large amount of data
}
\references{
ms_spectra_separated

ms_spectra_zipped
}
