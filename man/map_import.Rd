% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/NIST_import_routines.R
\name{map_import}
\alias{map_import}
\title{Map an import file to the database schema}
\usage{
map_import(
  import_obj,
  aspect,
  import_map,
  case_sensitive = TRUE,
  fuzzy = FALSE,
  ignore = TRUE,
  id_column = "_*id$",
  alias_column = "^alias$",
  resolve_normalization = TRUE,
  strip_na = FALSE,
  db_conn = con,
  log_ns = "db"
)
}
\arguments{
\item{import_obj}{LIST object of values to import}

\item{aspect}{CHR scalar of the import aspect (e.g. "sample") to map}

\item{import_map}{data.frame object of the import map (e.g. from a CSV)}

\item{case_sensitive}{LGL scalar of whether to match on a case sensitive
basis (the default TRUE searches for values as-provided) or whether to
coerce value matches by upper, lower, sentence, and title case matches}

\item{fuzzy}{LGL scalar of whether to do a "fuzzy" match in the sense that
values provided are wrapped in an SQL "LIKE '%value%'" clause; overrides
the `case_sensitive` setting if TRUE (default: FALSE).}

\item{db_conn}{connection object (default: con)}

\item{log_ns}{CHR scalar of the logging namespace to use (default: "db")}
}
\value{
LIST of final mapped values
}
\description{
This parses an import object and attempts to map it to database fields and
tables as defined by an import map stored in an object of class data.frame,
typically created during project compliance as "IMPORT_MAP". This object is a
list of all columns and their tables in the import file matched with the
database table and column to which they should be imported.
}
\note{
The object used for `import_map` must be of a data.frame object that at
  minimum includes names columns that includes import_category,
  import_parameter, alias_lookup, and sql_normalization
}
