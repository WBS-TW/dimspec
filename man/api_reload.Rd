% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/api_control.R
\name{api_reload}
\alias{api_reload}
\title{Reloads the plumber API}
\usage{
api_reload(
  pr = NULL,
  background = TRUE,
  plumber_file = NULL,
  on_host = NULL,
  on_port = NULL,
  log_ns = "api"
)
}
\arguments{
\item{pr}{CHR scalar name of the plumber service object, typically only
created as a background observer from [callr::r_bg] as a result of calling
[api_reload] (default: NULL gets the environment setting for
PLUMBER_OBJ_NAME)}

\item{background}{LGL scalar of whether to load the plumber server as a
background service (default: TRUE); set to FALSE for testing}

\item{plumber_file}{CHR scalar of the path to a plumber API to launch
(default: NULL)}

\item{on_host}{CHR scalar of the host IP address (default: NULL)}

\item{on_port}{CHR or INT scalar of the host port to use (default: NULL)}

\item{log_ns}{CHR scalar namespace to use for logging (default: "api")}
}
\value{
Launches the plumber API service on your local machine and returns
  the URL on which it can be accessed as a CHR scalar
}
\description{
Depending on system architecture, the plumber service may take some time to
spin up and spin down. If `background` is TRUE, this may mean the calling R
thread runs ahead of the background process resulting in unexpected behavior
(e.g. newly defined endpoints not being available), effectively binding it to
the prior iteration. If the API does not appear to be reloading properly, it
may be necessary to manually kill the process controlling it through your OS
and to call this function again.
}
