% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/app_functions.R
\name{log_it}
\alias{log_it}
\title{Conveniently log a message to the console}
\usage{
log_it(
  log_level,
  msg = NULL,
  log_ns = NULL,
  reset_logger_settings = FALSE,
  reload_all = FALSE,
  logger_settings = file.path("config", "env_logger.R"),
  add_unknown_ns = FALSE,
  clone_settings_from = NULL
)
}
\arguments{
\item{log_level}{CHR scalar of the level at which to log a given statement.
If using the [logger] package, must match one of [logger:::log_levels]}

\item{msg}{CHR scalar of the message to accompany the log.}

\item{log_ns}{CHR scalar of the logging namespace to use during execution
(default: NULL prints to the global logging namespace)}

\item{reset_logger_settings}{LGL scalar indicating whether or not to refresh
the logger settings using the file identified in \code{logger_settings}
(default: FALSE)}

\item{reload_all}{LGL scalar indicating whether to, during
\code{reset_logger_settings}, to reload the R environment configuration file}

\item{logger_settings}{CHR file path to the file containing logger settings
(default: file.path("config", "env_logger.R"))}

\item{add_unknown_ns}{LGL scalar indicating whether or not to add a new
namespace if \code{log_ns} is not defined in \code{logger_settings} (default: FALSE)}

\item{clone_settings_from}{CHR scalar indicating}
}
\value{
Adds to the logger file (if enabled) and/or prints to the console if
  enabled. See
}
\description{
Use this to log messages of arbitrary level and message. It works best with
[logger] but will also print directly to the console to support setups where
package [logger] may not be available or custom log levels are desired.
}
\details{
When using [logger], create settings for each namespace in file
\code{config/env_logger.R} as a list (see examples there) and make sure it is
sourced. If using with [logger] and "file" or "both" is selected for the
namespace \code{LOGGING[[log_ns]]$to} parameter in \code{env_logger.R} logs will be
written to disk at the file defined in \code{LOGGING[[log_ns]]$file} as well as
the console.
}
\examples{
log_it("test", "a test message")
test_log <- function() {
  log_it("success", "a success message")
  log_it("warn", "a warning message")
}
test_log()
# Try it with and without logger loaded.
}
