% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/api_generator.R
\name{dataframe_match}
\alias{dataframe_match}
\title{Match multiple values in a database table}
\usage{
dataframe_match(
  match_criteria,
  table_names,
  and_or = "AND",
  db_conn = con,
  log_ns = "db"
)
}
\arguments{
\item{match_criteria}{LIST of matching criteria with names matching columns
against which to apply. In the simplest case, a direct value is given to
the name (e.g. `list(last_name = "Smith")`) for single matches. All match
criteria must be their own list item. Values can also be provided as a
nested list for more complicated WHERE clauses with names `values`,
`exclude`, and `like` that will be recognized. `values` should be the
actual search criteria, and if a vector of length greater than one is
specified, the WHERE clause becomes an IN clause. `exclude` (LGL scalar)
determines whether to apply the NOT operator. `like` (LGL scalar)
determines whether this is an equality, list, or similarity. To reverse the
example above by issuing a NOT statement, use `list(last_name = list(values
= "Smith", exclude = TRUE))`, or to look for all records LIKE (or NOT LIKE)
"Smith", set this as `list(last_name = list(values = "Smith", exclude =
FALSE, like = TRUE))`}

\item{table_names}{CHR vector of tables to search}

\item{and_or}{LGL scalar of whether to use "AND" or "OR" for multiple
criteria, which will be used to combine them all. More complicated WHERE
clauses (including a mixture of AND and OR usage) should be built directly.
(default: "OR")}

\item{db_conn}{connection object (default: con)}

\item{log_ns}{CHR scalar of the logging namespace to use during execution
(default: "db")}
}
\value{
data.frame of the matching database rows
}
\description{
Complex queries are sometimes necessary to match against multiple varied
conditions across multiple items in a list or data frame. Call this function
to apply vectorization to all items in `match_criteria` and create a fully
qualified SQL expression using [clause_where] and execute that query against
the database connection in `db_conn`. Speed is not optimized during the call
to clause where as each clause is built independently and joined together
with "OR" statements.
}
\details{
This is intended for use with a data frame object
}
